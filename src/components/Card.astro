---
import { urlFor } from "../utils/image";
const { post } = Astro.props;
--- 

<a href={`/post/${post.slug.current}`}></a>
<div class="card" >
  {post.mainImage && (
    <img
      src={urlFor(post.mainImage).width(500).height(300).url()}
      alt="Cover image"
    />
 )}
  <article>
    <p>Github</p>
    <p>Frontend</p>
  </article>
  </div>
</a>

<style>
  .card {
    display: grid;
    border-radius: 8px;
    overflow: hidden;
  }

   .card > * {
    grid-column: 1 / 2;
    grid-row: 1 / 2
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  article {
    width: 100%;
    margin: 0 auto;
    padding: 1rem;
  }

  article p {
  display: inline-block;
  margin: .5em;
  background-color: yellowgreen;
  color: #ffffff;
  border-radius: 8px;
  font-size: 10px;
  padding: 10px 35px;
  font-weight: 700;
}

article p:hover {
  color: #111;
  border-color: #111;
}

.card:nth-of-type(1) {
  grid-column: 1 / 8;
  grid-row: 1;
}

.card:nth-of-type(2) {
  grid-column: 8 / 17;
  grid-row: 1;
}

.card:nth-of-type(3) {
  grid-column: 1 / 6;
  grid-row: 2;
}

.card:nth-of-type(4) {
  grid-column: 6 / 17;
  grid-row: 2;
}

.card:nth-of-type(5) {
  grid-column: 1 / 9;
  grid-row: 3;
}

.card:nth-of-type(6) {
  grid-column: 9 / 17;
  grid-row: 3;
}

@keyframes animate-in {
  0% { opacity: .5; transform: translateY(-8%); }
  100% { opacity: 1; transform: translateY(0%); }
}

@keyframes animate-out {
  0% { opacity: 1; transform: translateY(0%); }
  100% { opacity: .5; transform: translateY(-8%); }
}

@keyframes animate-in-in {
  0% { opacity: .5; transform: translateY(8%); }
  100% { opacity: 1; transform: translateY(-0%); }
}

@keyframes animate-out-out {
  0% { opacity: 1; transform: translateY(0%); }
  100% { opacity: .5; transform: translateY(-8%); }
}

.card:nth-of-type(1),
.card:nth-of-type(4),
.card:nth-of-type(6) {
  animation: animate-in linear, animate-out linear;
  animation-timeline: view(100vh);
  animation-range: entry, exit;
}

.card:nth-of-type(2),
.card:nth-of-type(3),
.card:nth-of-type(5) {
  animation: animate-in-in linear, animate-out-out linear;
  animation-timeline: view();
  animation-range: entry, exit;
}








  

  


 

    
     

 
</style>
